//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MatchResults.ScoresService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScoresService.IScoresService")]
    public interface IScoresService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllMatches", ReplyAction="http://tempuri.org/IScoresService/GetAllMatchesResponse")]
        Common.DataContracts.MATCH[] GetAllMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllMatches", ReplyAction="http://tempuri.org/IScoresService/GetAllMatchesResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetAllMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetLiveMatches", ReplyAction="http://tempuri.org/IScoresService/GetLiveMatchesResponse")]
        Common.DataContracts.MATCH[] GetLiveMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetLiveMatches", ReplyAction="http://tempuri.org/IScoresService/GetLiveMatchesResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetLiveMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllBets", ReplyAction="http://tempuri.org/IScoresService/GetAllBetsResponse")]
        Common.DataContracts.BET[] GetAllBets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllBets", ReplyAction="http://tempuri.org/IScoresService/GetAllBetsResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.BET[]> GetAllBetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllTeams", ReplyAction="http://tempuri.org/IScoresService/GetAllTeamsResponse")]
        Common.DataContracts.TEAM[] GetAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllTeams", ReplyAction="http://tempuri.org/IScoresService/GetAllTeamsResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.TEAM[]> GetAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetUserMatches", ReplyAction="http://tempuri.org/IScoresService/GetUserMatchesResponse")]
        Common.DataContracts.MATCH[] GetUserMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetUserMatches", ReplyAction="http://tempuri.org/IScoresService/GetUserMatchesResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetUserMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetMatchesForBet", ReplyAction="http://tempuri.org/IScoresService/GetMatchesForBetResponse")]
        Common.DataContracts.BETS_MATCHES[] GetMatchesForBet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetMatchesForBet", ReplyAction="http://tempuri.org/IScoresService/GetMatchesForBetResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.BETS_MATCHES[]> GetMatchesForBetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllLeagues", ReplyAction="http://tempuri.org/IScoresService/GetAllLeaguesResponse")]
        Common.DataContracts.LEAGUE[] GetAllLeagues();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetAllLeagues", ReplyAction="http://tempuri.org/IScoresService/GetAllLeaguesResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.LEAGUE[]> GetAllLeaguesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetBet", ReplyAction="http://tempuri.org/IScoresService/GetBetResponse")]
        Common.DataContracts.BET GetBet(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetBet", ReplyAction="http://tempuri.org/IScoresService/GetBetResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.BET> GetBetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetLeagueTable", ReplyAction="http://tempuri.org/IScoresService/GetLeagueTableResponse")]
        Common.DataContracts.TEAM[] GetLeagueTable(int idLeague);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/GetLeagueTable", ReplyAction="http://tempuri.org/IScoresService/GetLeagueTableResponse")]
        System.Threading.Tasks.Task<Common.DataContracts.TEAM[]> GetLeagueTableAsync(int idLeague);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/AddLeague", ReplyAction="http://tempuri.org/IScoresService/AddLeagueResponse")]
        void AddLeague(Common.DataContracts.LEAGUE league);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/AddLeague", ReplyAction="http://tempuri.org/IScoresService/AddLeagueResponse")]
        System.Threading.Tasks.Task AddLeagueAsync(Common.DataContracts.LEAGUE league);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/DeleteLeague", ReplyAction="http://tempuri.org/IScoresService/DeleteLeagueResponse")]
        void DeleteLeague(Common.DataContracts.LEAGUE[] leagueList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/DeleteLeague", ReplyAction="http://tempuri.org/IScoresService/DeleteLeagueResponse")]
        System.Threading.Tasks.Task DeleteLeagueAsync(Common.DataContracts.LEAGUE[] leagueList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/AddToUserMatches", ReplyAction="http://tempuri.org/IScoresService/AddToUserMatchesResponse")]
        void AddToUserMatches(Common.DataContracts.MATCH[] matchesList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/AddToUserMatches", ReplyAction="http://tempuri.org/IScoresService/AddToUserMatchesResponse")]
        System.Threading.Tasks.Task AddToUserMatchesAsync(Common.DataContracts.MATCH[] matchesList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/DeleteFromMyMatches", ReplyAction="http://tempuri.org/IScoresService/DeleteFromMyMatchesResponse")]
        void DeleteFromMyMatches(Common.DataContracts.MATCH[] matchesList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScoresService/DeleteFromMyMatches", ReplyAction="http://tempuri.org/IScoresService/DeleteFromMyMatchesResponse")]
        System.Threading.Tasks.Task DeleteFromMyMatchesAsync(Common.DataContracts.MATCH[] matchesList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScoresServiceChannel : MatchResults.ScoresService.IScoresService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScoresServiceClient : System.ServiceModel.ClientBase<MatchResults.ScoresService.IScoresService>, MatchResults.ScoresService.IScoresService {
        
        public ScoresServiceClient() {
        }
        
        public ScoresServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScoresServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoresServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScoresServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.DataContracts.MATCH[] GetAllMatches() {
            return base.Channel.GetAllMatches();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetAllMatchesAsync() {
            return base.Channel.GetAllMatchesAsync();
        }
        
        public Common.DataContracts.MATCH[] GetLiveMatches() {
            return base.Channel.GetLiveMatches();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetLiveMatchesAsync() {
            return base.Channel.GetLiveMatchesAsync();
        }
        
        public Common.DataContracts.BET[] GetAllBets() {
            return base.Channel.GetAllBets();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.BET[]> GetAllBetsAsync() {
            return base.Channel.GetAllBetsAsync();
        }
        
        public Common.DataContracts.TEAM[] GetAllTeams() {
            return base.Channel.GetAllTeams();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.TEAM[]> GetAllTeamsAsync() {
            return base.Channel.GetAllTeamsAsync();
        }
        
        public Common.DataContracts.MATCH[] GetUserMatches() {
            return base.Channel.GetUserMatches();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.MATCH[]> GetUserMatchesAsync() {
            return base.Channel.GetUserMatchesAsync();
        }
        
        public Common.DataContracts.BETS_MATCHES[] GetMatchesForBet() {
            return base.Channel.GetMatchesForBet();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.BETS_MATCHES[]> GetMatchesForBetAsync() {
            return base.Channel.GetMatchesForBetAsync();
        }
        
        public Common.DataContracts.LEAGUE[] GetAllLeagues() {
            return base.Channel.GetAllLeagues();
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.LEAGUE[]> GetAllLeaguesAsync() {
            return base.Channel.GetAllLeaguesAsync();
        }
        
        public Common.DataContracts.BET GetBet(int id) {
            return base.Channel.GetBet(id);
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.BET> GetBetAsync(int id) {
            return base.Channel.GetBetAsync(id);
        }
        
        public Common.DataContracts.TEAM[] GetLeagueTable(int idLeague) {
            return base.Channel.GetLeagueTable(idLeague);
        }
        
        public System.Threading.Tasks.Task<Common.DataContracts.TEAM[]> GetLeagueTableAsync(int idLeague) {
            return base.Channel.GetLeagueTableAsync(idLeague);
        }
        
        public void AddLeague(Common.DataContracts.LEAGUE league) {
            base.Channel.AddLeague(league);
        }
        
        public System.Threading.Tasks.Task AddLeagueAsync(Common.DataContracts.LEAGUE league) {
            return base.Channel.AddLeagueAsync(league);
        }
        
        public void DeleteLeague(Common.DataContracts.LEAGUE[] leagueList) {
            base.Channel.DeleteLeague(leagueList);
        }
        
        public System.Threading.Tasks.Task DeleteLeagueAsync(Common.DataContracts.LEAGUE[] leagueList) {
            return base.Channel.DeleteLeagueAsync(leagueList);
        }
        
        public void AddToUserMatches(Common.DataContracts.MATCH[] matchesList) {
            base.Channel.AddToUserMatches(matchesList);
        }
        
        public System.Threading.Tasks.Task AddToUserMatchesAsync(Common.DataContracts.MATCH[] matchesList) {
            return base.Channel.AddToUserMatchesAsync(matchesList);
        }
        
        public void DeleteFromMyMatches(Common.DataContracts.MATCH[] matchesList) {
            base.Channel.DeleteFromMyMatches(matchesList);
        }
        
        public System.Threading.Tasks.Task DeleteFromMyMatchesAsync(Common.DataContracts.MATCH[] matchesList) {
            return base.Channel.DeleteFromMyMatchesAsync(matchesList);
        }
    }
}
